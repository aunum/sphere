{
  "swagger": "2.0",
  "info": {
    "title": "v1alpha/env.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1alpha/envs": {
      "get": {
        "summary": "List all environments.",
        "operationId": "ListEnvs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListEnvResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit the number of environments returned.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Where to start returning list from.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      },
      "post": {
        "summary": "Create an environment.",
        "operationId": "CreateEnv",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaCreateEnvResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaCreateEnvRequest"
            }
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      }
    },
    "/v1alpha/envs/{id}": {
      "get": {
        "summary": "Gen an environment.",
        "operationId": "GetEnv",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetEnvResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the environment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      },
      "delete": {
        "summary": "Delete environment",
        "operationId": "DeleteEnv",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeleteEnvResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the environment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      }
    },
    "/v1alpha/envs/{id}/reset": {
      "put": {
        "summary": "Reset an environment.",
        "operationId": "ResetEnv",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaResetEnvResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the environment.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaResetEnvRequest"
            }
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      }
    },
    "/v1alpha/envs/{id}/results": {
      "get": {
        "summary": "Results from the environment.",
        "operationId": "Results",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaResultsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the environment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      }
    },
    "/v1alpha/envs/{id}/step": {
      "post": {
        "summary": "Step through an environment.",
        "operationId": "StepEnv",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaStepEnvResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the environment.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaStepEnvRequest"
            }
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      }
    },
    "/v1alpha/envs/{id}/videos": {
      "get": {
        "summary": "Stream result videos.",
        "operationId": "Videos",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/v1alphaVideoResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the environment.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      }
    },
    "/v1alpha/info": {
      "get": {
        "summary": "Info about the environment.",
        "operationId": "Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaInfoResponse"
            }
          }
        },
        "tags": [
          "EnvironmentAPI"
        ]
      }
    },
    "/v1alpha/models": {
      "get": {
        "summary": "List all environment models that can be created.",
        "operationId": "ListModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListModelsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit the number of models returned.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Where to start returning list from.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EnvironmentAPI"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpcCode": {
          "type": "integer",
          "format": "int32"
        },
        "httpCode": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "httpStatus": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alphaCreateEnvRequest": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "Name of the environment model."
        }
      },
      "title": "Request to create an environment"
    },
    "v1alphaCreateEnvResponse": {
      "type": "object",
      "properties": {
        "observationShape": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Shape of the observation."
        },
        "numActions": {
          "type": "integer",
          "format": "int32",
          "description": "Number of actions."
        },
        "maxEpisodeSteps": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of episode steps."
        }
      },
      "description": "Response from creating an environment."
    },
    "v1alphaDeleteEnvResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Message from deleting environment."
        }
      },
      "description": "Response from deleting an environment."
    },
    "v1alphaEnvironment": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "Name of the model used to build the environment."
        },
        "id": {
          "type": "string",
          "description": "ID of the environment."
        }
      },
      "description": "Environment agents can interact with."
    },
    "v1alphaGetEnvResponse": {
      "type": "object",
      "properties": {
        "env": {
          "$ref": "#/definitions/v1alphaEnvironment",
          "description": "Environment returned."
        }
      },
      "description": "Response from getting an environment."
    },
    "v1alphaInfoResponse": {
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string",
          "description": "Name of this environment server."
        }
      },
      "description": "Response containing info about the environment."
    },
    "v1alphaListEnvResponse": {
      "type": "object",
      "properties": {
        "envs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaEnvironment"
          },
          "description": "List of environments."
        }
      },
      "description": "Response from listing environments."
    },
    "v1alphaListModelsResponse": {
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaModel"
          },
          "description": "List of models."
        }
      },
      "description": "Response from listing models."
    },
    "v1alphaModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the model."
        },
        "description": {
          "type": "string",
          "description": "Description of the model."
        }
      },
      "description": "Model environments can be created from."
    },
    "v1alphaObservation": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Data from environment."
        },
        "shape": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Shape of environment."
        }
      },
      "description": "Observation of environment."
    },
    "v1alphaResetEnvRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the environment."
        }
      },
      "description": "Response from resetting an environment."
    },
    "v1alphaResetEnvResponse": {
      "type": "object",
      "properties": {
        "observation": {
          "$ref": "#/definitions/v1alphaObservation",
          "description": "Observation of environment after resetting."
        }
      },
      "description": "Response from resetting an environment."
    },
    "v1alphaResultsResponse": {
      "type": "object",
      "properties": {
        "videoIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of videos recorded, can be fetched with the video endpoint."
        }
      },
      "description": "Response with environment results."
    },
    "v1alphaStepEnvRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the environment."
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "Step with given value."
        }
      },
      "description": "Request to step in an environment."
    },
    "v1alphaStepEnvResponse": {
      "type": "object",
      "properties": {
        "observation": {
          "$ref": "#/definitions/v1alphaObservation",
          "description": "Observation after step."
        },
        "reward": {
          "type": "number",
          "format": "float",
          "description": "Reware after step."
        },
        "nextEpisode": {
          "$ref": "#/definitions/v1alphaObservation",
          "description": "Observation for next episode."
        }
      },
      "description": "Response from stepping in an environment."
    },
    "v1alphaVideoResponse": {
      "type": "object",
      "properties": {
        "chunk": {
          "type": "string",
          "format": "byte",
          "description": "Chunk of video."
        }
      },
      "description": "Response with chunked result video."
    }
  },
  "x-stream-definitions": {
    "v1alphaVideoResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/v1alphaVideoResponse"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of v1alphaVideoResponse"
    }
  }
}
